How to create Raspberry Pi Raspbian image for Dreamland:

1. Download and copy the latest version of wheezy onto an sd card
2. Insert SD card to the RPi, boot up, and ssh into the RPi.
3. Uncomment line "hdmi_force_hotplug=1" in /boot/config.txt
   (so the hdmi connector doesn't get disabled when nothing's plugged in)
4. In /etc/default/keyboard, change XKBLAYOUT="gb" to XKBLAYOUT="us"
   (useful when using a USB keyboard plugged into the RPi)
5. On the RPi: "sudo raspi-config"
	Select (8)Advanced options -> (A7)I2C
	    Would you like the ARM I2C interface to be enabled? -> <Yes>
	    Would you like the I2C kernel module to be loaded by default? -> <Yes>
6. Select <Finish>, Reboot -> <Yes>
   After reboot ssh back into the RPi.
7. Update, then upgrade operation system: 
  (the RPi needs to be connected to the internet)
	sudo apt-get update
	sudo apt-get upgrade
8. Update other packages:
	sudo apt-get install -y avahi-daemon python3-pip python-zmq make autoconf automake libtool cython
9. sudo pip-3.2 install distribute --upgrade
10. sudo pip-3.2 install pyzmq  (this takes a while)
11. sudo apt-get install python-webpy (this also takes a while)
12. Check version of packages:
    pi@raspberrypi:~$ pip-3.2 freeze
	RPi.GPIO==0.5.11
	distribute==0.7.3
	mcpi==0.1.1
	numpy==1.6.2
	picamera==1.10
	pifacecommon==4.1.2
	pifacedigitalio==3.0.4
	pygame==1.9.2a0
	pyserial==2.5
	pyzmq==14.7.0
	wsgiref==0.1.2
   (Update as necessary: sudo pip-3.2 install XXXXX --upgrade)
14. Add to the end of /etc/modules: (e.g. "sudo nano /etc/modules")
			i2c-bcm2708
			i2c-dev
15. sudo reboot
16. sudo apt-get install i2c-tools
17. Verify that the RPi can talk the i2c protocol:
	pi@raspberrypi:~$ i2cdetect -y 1
     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
00:          -- -- -- -- -- -- -- -- -- -- -- -- -- 
10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 
60: -- -- -- -- -- -- -- -- 68 -- -- -- -- -- -- -- 
70: -- -- -- -- -- -- -- --                         
	(The 68 will appear if the MPU-6050 chip is connected, otherwise "--")

18. cd ~
    mkdir repo
    cd repo
    git clone https://github.com/Dreamland2015/Dreamland.git
19. cd ~/repo/Dreamland/sensorDemo/i2c4python3/i2c-tools-3.1.0/py-smbus
18. sudo python3 setup.py build
    (may take a long time, or not if we precompiled things & put it on github)
19. sudo python3 setup.py install
20. Check that smbus is properly installed (note 2nd to last line):
	pi@raspberrypi:~$ pip-3.2 freeze
	RPi.GPIO==0.5.11
	distribute==0.7.3
	mcpi==0.1.1
	numpy==1.6.2
	picamera==1.10
	pifacecommon==4.1.2
	pifacedigitalio==3.0.4
	pygame==1.9.2a0
	pyserial==2.5
	pyzmq==14.7.0
	smbus==1.1
	wsgiref==0.1.2

That's it (so far)!
Still need to add: fadecandy


Options at the end:
A. Test accelerometer/gyro:
	1. cd ~/repo/Dreamland/sensorDemo/gyro_test/1_read_gyro_angle
	2. python3 gyrotest3.py
		(stop program with ctrl-C)

B. Clone SD card image so it can be used on other RPis (see notes below) - good to do before expanding the file system (see option B below). Use gzip or zip7 to compress image after cloning (so it takes less space).
   
C. sudo raspi-config
	Select option (1) Expand Filesystem

D. Setup hostname of RPi to distinguish it from other RPis:
    sudo raspi-config
    advanced options
    hostname - change to name of choice
    tab, tab, enter
    tab, tab, enter to save




Notes:
-------
Useful software 
(Windows):
- Win32DiskImager (http://sourceforge.net/projects/win32diskimager/)
	Used to write Raspbian image to SD card
- Paragon ExtFS (https://www.paragon-software.com/home/extfs-windows/)
	Allows Windows to read and write disk partitions in ext format.
	The SD card has one small FAT32 partition with a small number of boot files, and a larger ext partition with all other files
- Angry IP scanner (http://angryip.org/download/#windows)
	Useful to check the local network for IP addresses of connected devices
	(requires installing Java)
[MacOS]
- Angry IP scanner (http://angryip.org/download/#windows)
	Useful to check the local network for IP addresses of connected devices

	
Notes on step 1: 
	a. Raspbian can be downloaded at https://www.raspberrypi.org/downloads/
	b. Using a laptop to write Raspbian image to SD card:
			Windows: use Win32DiskImager (http://sourceforge.net/projects/win32diskimager/)
			Mac: Follow instructions at (https://www.raspberrypi.org/documentation/installation/installing-images/mac.md):
				If you are comfortable with the command line, you can image a card without any additional software. Run:
				diskutil list
				Identify the disk (not partition) of your SD card e.g. disk4 (not disk4s1):
				diskutil unmountDisk /dev/<disk# from diskutil>
				e.g. diskutil unmountDisk /dev/disk4
				sudo dd bs=1m if=image.img of=/dev/<disk# from diskutil>
				e.g. sudo dd bs=1m if=2015-05-05-raspbian-wheezy.img of=/dev/disk4
				This may result in an dd: invalid number '1m' error if you have GNU coreutils installed. In that case you need to use 1M:
				sudo dd bs=1M if=image.img of=/dev/<disk# from diskutil>
				This will take a few minutes, depending on the image file size. You can check the progress by sending a SIGINFO signal pressing Ctrl+T.
				

	

      